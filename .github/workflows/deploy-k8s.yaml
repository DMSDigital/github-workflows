
on:
  workflow_call:
    inputs:
      app_name:
        description: 'Application name used for building the image'
        required: true
        type: string
      deployment_name:
        description: 'Application name used for the k8s deployment'
        required: true
        type: string
      namespace:
        description: "Kubernetes namespace for the app deployment"
        default: default
        type: string
      service_account:
        description: 'GCP Service account to use with Workload identity federation'
        required: true
        type: string
      workload_identity_provider:
        description: "GCP Workload identity provider for Github actions"
        required: true
        type: string
      cluster:
        description: "Kubernetes cluster to deploy on"
        type: string
      project_id:
        description: "GCP project ID"
        type: string
      location:
        description: "Kubernetes cluster to deploy on"
        type: string
        required: false
        default: "europe-west2-a"
      registry:
        description: "Docker registry to push the image"
        required: false
        default: eu.gcr.io/dextcloud-203808
        type: string
      rollout_timeout:
        description: "Time to wait for the pod rollout to finish"
        required: false
        default: 300
        type: string
    secrets:
      slack_webhook:
        required: false

jobs:
  setup-build-publish-deploy:
    name: Deploy to k8s
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - id: 'auth'
      uses: 'google-github-actions/auth@v0.4.1'
      with:
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}
    
    # Setup gcloud CLI
    - name: Setup GCLOUD
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ inputs.project_id }}

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.5.0
      with:
        cluster_name: ${{ inputs.cluster }}
        location: ${{ inputs.location }}

    - name: Deploy
      run: |
        kubectl -n ${{ inputs.namespace }} set image deployment/${{ inputs.deployment_name }} ${{ inputs.deployment_name }}=${{ inputs.registry }}/${{ inputs.app_name}}:$GITHUB_SHA

    - name: Watch rollout
      id: rollout
      run: |
        timeout ${{ inputs.rollout_timeout }} kubectl rollout status deploy/${{ inputs.deployment_name }} -n ${{ inputs.namespace }}
        kubectl logs -l app=${{ inputs.deployment_name }} --tail 250

    - name: Rollback
      if: ${{ failure() && steps.rollout.conclusion == 'failure' }}
      run: |
        kubectl -n ${{ inputs.namespace }} rollout undo deployment ${{ inputs.deployment_name }}
        exit 1

    - name: Send slack update success
      if: ${{ success() }}
      continue-on-error: true
      run: |
        curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Deployment for ${{ inputs.app_name }} to ${{ inputs.cluster }} has finished successfully. URL: ${{ github.repositoryUrl }}/runs/${{ github.github.run_id	}}\"}" ${{ secrets.slack_webhook }}

    - name: Send slack update failure
      if: ${{ failure() }}
      continue-on-error: true
      run: |
        curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Deployment for ${{ inputs.app_name }} to ${{ inputs.cluster }} has failed. URL: ${{ github.repositoryUrl }}/runs/${{ github.github.run_id	}}\"}" ${{ secrets.slack_webhook }}
