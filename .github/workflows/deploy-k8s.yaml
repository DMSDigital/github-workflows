
on:
  workflow_call:
    inputs:
      app_name:
        description: 'Application name used for building the image'
        required: true
        type: string
      deployment_name:
        description: 'Application name used for the k8s deployment'
        required: true
        type: string
      service_account:
        description: ''
        default: ''
        required: false
        type: string
      workload_identity_provider:
        description: "GCP Workload identity provider for Github actions"
        required: false
        default: ''
        type: string
      registry:
        description: "Docker registry to push the image"
        required: false
        default: eu.gcr.io/dextcloud-2038082
        type: string
      rollout_timeout:
        description: "Time to wait for the pod rollout to finish"
        requred: false
        default: 300
        type: integer
jobs:
  setup-build-publish-deploy:
    name: Deploy to k8s
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - id: 'auth'
      uses: 'google-github-actions/auth@v0.4.1'
      with:
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}
    
    # Setup gcloud CLI
    - name: Setup GCLOUD
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ inputs.project_id }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.5.0
      with:
         cluster_name: ${{ inputs.cluster }}
         location: ${{ inputs.zone }}

    - name: Deploy
      run: |
        kubectl set image deployment/${{ inputs.deployment_name }} ${{ inputs.deployment_name }}=${{ inputs.registry }}/${{ inputs.app_name}}:$GITHUB_SHA
        timeout ${{ inputs.rollout_timeout }}
