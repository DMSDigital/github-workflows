name: Build and push a docker image

on:
  workflow_call:
    inputs:
      app_name:
        description: 'Application name to be used for building the image'
        required: true
        type: string
      source_tag:
        description: 'Source tag to pull'
        required: false
        type: string
        default: ${{ github.sha }}
      destination_app_name:
        description: 'Application name override for the destination'
        required: true
        type: string
      destination_tag:
        description: 'Destination tag'
        required: false
        type: string
        default: latest
      registry:
        description: "Docker registry to pull the image"
        required: false
        default: 208047562239.dkr.ecr.eu-west-2.amazonaws.com
        type: string
      public_registry:
        description: "Flag if the registry is public"
        type: boolean
        required: false
        default: false

      dockerhub_registry:
        description: "DockerHub registry to push the image"
        required: false
        default: docker.io/dextcloudonprem
        type: string
      iam_role:
        description: 'AWS IAM Role to authenticate with'
        required: true
        type: string
      region:
        description: "AWS region"
        type: string
        required: false
        default: eu-west-2

    secrets:
      dockerhub_username:
        required: true
      dockerhub_password:
        required: true

jobs:
  build_and_push:
    name: Build and push a docker image
    runs-on: ubuntu-latest 
    permissions:
      id-token: write
      contents: write

    steps:
    - name: Setup
      uses: DMSDigital/github-workflows/.github/actions/init-setup-aws@master
      with:
        iam_role: ${{ inputs.iam_role }}
        region: ${{ inputs.region }}
        public_registry: ${{ inputs.public_registry }}

    - name: Pull, tag and push
      run: |
        if [ ${{ inputs.source_tag }} == "latest" ]; then
          source_tag=latest
        else
          source_tag=${{ github.sha }}
        fi
        docker pull ${{ inputs.registry }}/${{ inputs.app_name}}:$source_tag
        docker tag ${{ inputs.registry }}/${{ inputs.app_name}}:$source_tag ${{ inputs.dockerhub_registry}}/${{ inputs.destination_app_name}}:${{ inputs.destination_tag }}
        docker login -u "${{ secrets.dockerhub_username }}" -p "${{ secrets.dockerhub_password }}"
        docker push ${{ inputs.dockerhub_registry}}/${{ inputs.destination_app_name }}:${{ inputs.destination_tag }}
