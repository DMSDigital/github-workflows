name: Build and push a docker image

on:
  workflow_call:
    inputs:
      app_name:
        description: 'Application name to be used for building the image'
        required: true
        type: string
      registry:
        description: "Docker registry to push the image"
        required: false
        default: eu.gcr.io/dextcloud-203808
        type: string
      java_target_name:
        description: "Target name of the java app"
        required: true
        type: string
      dockerfile:
        description: "Path to dockerfile"
        required: false
        default: "./Dockerfile"
        type: string
      build-args: 
        description: "List of build time arguments to pass to docker build"
        required: false
        type: string
      tag_latest:
        description: "Tag the push to the registry with the latest tag"
        type: boolean
        default: true
      service_account:
        description: 'GCP Service account to use with Workload identity federation'
        required: true
        type: string
      project_id:
        description: "GCP project ID"
        type: string
      workload_identity_provider:
        description: "GCP Workload identity provider for Github actions"
        required: true
        type: string
    secrets:
      slack_webhook:
        required: false

jobs:
  build_and_push:
    name: Build and push a docker image
    runs-on: [self-hosted]
    permissions:
      id-token: write
      contents: write

    steps:
    - name: Setup
      uses: DMSDigital/github-workflows/.github/actions/init-setup@master
      with:
        project_id: ${{ inputs.project_id }}
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}
        self_hosted: true

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Setup Maven
      uses: s4u/setup-maven-action@v1.4.0
      with:
        java-version: 11
        maven-version: 3.6.3

    - name: Bump version on master
      if: github.ref == 'refs/heads/master'
      run: mvn validate -DbumpPatch

    - name: Build app, build and push image
      run: |
        mvn -DskipTests clean install
        grep -Eo "<version>[0-9]+.[0-9]+.[0-9]+" pom.xml | grep -Eo "[0-9]+\\.[0-9]+\\.[0-9]+" | head -n 1 > next_version
        docker build -t ${{ inputs.registry }}/${{ inputs.app_name}}:${{ github.sha	}} --build-arg JAR_FILE=target/${{ inputs.java_target_name}}-`cat next_version`.jar .
        docker push ${{ inputs.registry }}/${{ inputs.app_name}}:${{ github.sha	}} 
        if [ ${{inputs.tag_latest }} == "true" ]; then
          docker tag ${{ inputs.registry }}/${{ inputs.app_name}}:${{ github.sha }} ${{ inputs.registry }}/${{ inputs.app_name}}:latest
          docker push ${{ inputs.registry }}/${{ inputs.app_name}}:latest
        fi

    - name: Send slack update failure
      if: ${{ failure() }}
      continue-on-error: true
      run: |
        curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Docker build for ${{ inputs.app_name }} has failed. URL: ${{ github.repositoryUrl }}/runs/${{ github.github.run_id	}}\"}" ${{ secrets.slack_webhook }}