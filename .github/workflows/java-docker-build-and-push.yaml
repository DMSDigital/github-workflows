name: Build and push a docker image

on:
  workflow_call:
    inputs:
      app_name:
        description: 'Application name to be used for building the image'
        required: true
        type: string
      registry:
        description: "Docker registry to push the image"
        required: false
        default: eu.gcr.io/dextcloud-203808
        type: string
      java_target_name:
        description: "Target name of the java app"
        required: true
        type: string
      dockerfile:
        description: "Path to dockerfile"
        required: false
        default: "./Dockerfile"
        type: string
      build-args: 
        description: "List of build time arguments to pass to docker build"
        required: false
        type: string
      service_account:
        description: 'GCP Service account to use with Workload identity federation'
        required: true
        type: string
      project_id:
        description: "GCP project ID"
        type: string
      workload_identity_provider:
        description: "GCP Workload identity provider for Github actions"
        required: true
        type: string
jobs:
  build_and_push:
    name: Build and push a docker image
    runs-on: ubuntu-latest 
    permissions:
      id-token: write
      contents: write

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: GCP authenticate
      uses: 'google-github-actions/auth@v0.4.1'
      with:
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}
    - name: Setup GCLOUD
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ inputs.project_id }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - name: Configure docker
      run: |-
        gcloud --quiet auth configure-docker

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build app, build and push image
      run: |
        mvn validate -DbumpPatch
        mvn clean install
        grep -Eo "<version>[0-9]+.[0-9]+.[0-9]+" pom.xml | grep -Eo "[0-9]+\\.[0-9]+\\.[0-9]+" | head -n 1 > next_version
        docker build -t ${{ inputs.registry }}/${{ inputs.app_name}}:${{ github.sha	}} --build-arg JAR_FILE=target/${{ inputs.java_target_name}}-`cat next_version`.jar .
        docker push ${{ inputs.registry }}/${{ inputs.app_name}}:${{ github.sha	}} 
